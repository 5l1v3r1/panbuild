#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import yaml
import json
import sys
import argparse

# Local imports
# from toflatpak import snap
# FIXME why no over flatpak directly?
import snap

if __name__ == '__main__':
    parser = argparse.ArgumentParser(prog='2flatpak', description='')
    parser.add_argument('--f --input-format', dest='input_format', choices=['snap', 'deb', 'pyproject'], required=True,
                        help='The format of the input artifact.')
    # We support json and yaml because this is what Flatpak supports.
    parser.add_argument('--o --output-format', dest='output_format', choices=['json', 'yaml'], default='yaml',
                        help='The format of the resulting flatpak manifest.')
    args = parser.parse_args(sys.argv[1:])

    # TODO use parser.print_help() if the help option is set.

    # Otherwise the format is JSON, as both formats are supported by Flatpak.
    format_is_yaml = True
    input_format = 'snap'
    print(dir(args))

    input_path = sys.argv[1]

    flatpak_manifest = {}
    if input_format == 'snap':
        flatpak_manifest = snap.to_flatpak(input_path)
    else:
        sys.stderr.write("{0} is not a valid input format! Available choices are [snap].".format(input_format))
        sys.exit(1)

    if format_is_yaml:
        print(yaml.dump(
            flatpak_manifest,
            default_flow_style=False,
            explicit_start=True,
            allow_unicode=True,
        ))
    else:
        print(json.dump(
            flatpak_manifest,
            default_flow_style=False,
            explicit_start=True,
            allow_unicode=True,
        ))
